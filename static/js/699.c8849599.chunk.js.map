{"version":3,"file":"static/js/699.c8849599.chunk.js","mappings":"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","sources":["components/watchpages/WatchVideoDescription.jsx","components/comments/CommentContainer.jsx","components/watchpages/ChatMessage.jsx","utils/helper.js","components/watchpages/LiveChat.jsx","components/watchpages/WatchPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst WatchVideoDescription = ({ info }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  if (info.length === 0) {\n    return <div className=\"font-semibold\">Loading...</div>;\n  }\n  const { snippet, statistics } = info;\n  const { title, channelTitle, description, publishedAt, tags, thumbnails } =\n    snippet;\n  const { viewCount, likeCount } = statistics;\n\n  return (\n    <div className=\"w-[98%] flex flex-col py-2\">\n      <div className=\"text-xl font-bold\">{title}</div>\n      <div className=\"w-full py-2\">\n        <div className=\"flex items-center relative\">\n          <img\n            className=\" rounded-full h-9 w-9 mr-3\"\n            src={thumbnails.medium.url}\n            alt=\"channel-logo\"\n          />\n\n          <div className=\"flex flex-col\">\n            <span className=\"font-bold\">{channelTitle}</span>{\" \"}\n            <span className=\"text-sm\">76k Subscribers</span>\n          </div>\n          <button className=\"text-white bg-black rounded-3xl py-2 px-3 text-ls mx-5 font-semibold\">\n            Subscriber\n          </button>\n          <div className=\"absolute right-2 flex cursor-pointer\">\n            <div className=\"border border-gray-300 bg-gray-200 rounded-l-full px-4 py-2 hover:bg-gray-300\">{`üëçüèª   ${(\n              likeCount + \"\"\n            ).slice(0, 3)}K`}</div>\n            <div className=\"border border-gray-300 bg-gray-200 rounded-r-full px-4 py-2 hover:bg-gray-300\">\n              üëéüèª\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        className={`w-full py-4 px-5 bg-gray-300 mt-4 rounded-xl space-y-4 text-sm cursor-pointer ${\n          isExpanded ? \" h-auto\" : \"h-[120px] overflow-hidden\"\n        }`}\n        onClick={() => setIsExpanded(!isExpanded)}\n      >\n        <span className=\"font-semibold\">{`${Number(\n          viewCount\n        ).toLocaleString()} views`}</span>\n        {isExpanded && (\n          <div>\n            {tags &&\n              tags.map((element) => {\n                return (\n                  <span key={element} className=\"text-blue-600 px-1\">\n                    #{element}\n                  </span>\n                );\n              })}\n          </div>\n        )}\n        <div>{isExpanded ? description : description.substr(0, 200)}</div>\n        <div className=\"inline font-bold\">\n          {isExpanded ? \"show less\" : \"..more\"}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WatchVideoDescription;\n","import React, { useId, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addComment } from \"../../utils/commentSlice\";\n\nconst commentData = [\n  {\n    id: 1,\n    name: \"Harish RM\",\n    comment:\n      \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Saepe, cupiditate!\",\n    replies: [],\n  },\n  {\n    id: 2,\n    name: \"Harish RM\",\n    comment:\n      \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Saepe, cupiditate!\",\n    replies: [\n      {\n        id: 3,\n        name: \"Harish RM\",\n        comment:\n          \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Saepe, cupiditate!\",\n        replies: [],\n      },\n      {\n        id: 4,\n        name: \"Harish RM\",\n        comment:\n          \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Saepe, cupiditate!\",\n        replies: [\n          {\n            id: 5,\n            name: \"Harish RM\",\n            comment:\n              \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Saepe, cupiditate!\",\n            replies: [\n              {\n                id: 6,\n                name: \"Harish RM\",\n                comment:\n                  \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Saepe, cupiditate!\",\n                replies: [],\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    id: 6,\n    name: \"Harish RM\",\n    comment:\n      \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Saepe, cupiditate!\",\n    replies: [\n      {\n        id: 7,\n        name: \"Harish RM\",\n        comment:\n          \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Saepe, cupiditate!\",\n        replies: [],\n      },\n    ],\n  },\n];\n\nconst Comment = ({ data }) => {\n  const dispatch = useDispatch();\n  const [replyComment, setReplyComment] = useState(\"\");\n  const { name, comment, commentId } = data;\n\n  const addReplyComment = () => {\n    const id = \"_\" + Math.random().toString(36).substr(2, 6);\n    replyComment &&\n      dispatch(\n        addComment({\n          parentId: commentId,\n          commentId: id,\n          name: \"Arun\",\n          comment: replyComment,\n        })\n      );\n    setReplyComment(\"\");\n  };\n  return (\n    <div className=\"flex flex-col py-3\">\n      <div className=\"flex\">\n        <img\n          className=\"w-6 h-6 mt-1\"\n          src=\"https://cdn-icons-png.flaticon.com/512/61/61205.png\"\n          alt=\"user-icon\"\n        />\n        <div className=\"pl-4\">\n          <p className=\"font-bold\">{name}</p>\n          <p>{comment}</p>\n        </div>\n      </div>\n      <div className=\"pl-10 flex space-x-2\">\n        <input\n          type=\"text\"\n          placeholder=\"reply for this comment\"\n          className=\"border-b-2 w-1/6 outline-none\"\n          value={replyComment}\n          onChange={(e) => setReplyComment(e.target.value)}\n        />\n        <div className=\"cursor-pointer\" onClick={() => addReplyComment()}>\n          ‚úîÔ∏è\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst CommentList = ({ comments }) => {\n  return comments.map((comment) => {\n    return (\n      <div key={comment.commentId}>\n        <Comment data={comment} />\n        {comment.replies && (\n          <div className=\"border-l-2 border-gray-300 ml-2 pl-6\">\n            <CommentList comments={comment.replies} />\n          </div>\n        )}\n      </div>\n    );\n  });\n};\n\nconst CommentContainer = () => {\n  const commentList = useSelector((store) => store.comment.commentList);\n  const dispatch = useDispatch();\n  const [initialComment, setInitialComment] = useState(\"\");\n  const addInitialComment = () => {\n    const id = \"_\" + Math.random().toString(36).substr(2, 9);\n\n    initialComment &&\n      dispatch(\n        addComment({\n          parentId: \"initial\",\n          commentId: id,\n          name: \"Harish\",\n          comment: initialComment,\n        })\n      );\n    setInitialComment(\"\");\n  };\n\n  return (\n    <div className=\"pb-10\">\n      <div className=\"my-6 text-xl font-bold\">987 Comments:</div>\n      <div className=\"flex space-x-2\">\n        <input\n          type=\"text\"\n          placeholder=\"Add a comment\"\n          className=\"border-b-2 w-1/2 outline-none\"\n          value={initialComment}\n          onChange={(e) => setInitialComment(e.target.value)}\n        />\n        <div className=\"cursor-pointer\" onClick={() => addInitialComment()}>\n          ‚úîÔ∏è\n        </div>\n      </div>\n      <CommentList comments={commentList} />\n    </div>\n  );\n};\n\nexport default CommentContainer;\n","import React from \"react\";\n\nconst ChatMessage = ({ name, message }) => {\n  return (\n    <div className=\"p-2 flex items-center text-sm shadow-sm justify-start\">\n      <img\n        className=\"h-7\"\n        src=\"https://cdn-icons-png.flaticon.com/512/61/61205.png\"\n        alt=\"acc-icon\"\n      />\n      <span className=\"font-semibold px-2\">{name}</span>\n      <span>{message}</span>\n    </div>\n  );\n};\n\nexport default ChatMessage;\n","const randomNames = [\n  \"Akshara\",\n  \"Anirudh\",\n  \"Arjun\",\n  \"Aradhana\",\n  \"Aishwarya\",\n  \"Swathi\",\n  \"Arun\",\n  \"Kaushik\",\n  \"Nandhini\",\n  \"Gayathi\",\n  \"Ganesh\",\n  \"Pooja\",\n  \"Udhaya\",\n  \"Harish\",\n  \"Shafee\",\n  \"Thani\",\n];\n\nconst hollywoodDialogues = [\n  \"Here's looking at you, kid.\",\n  \"I feel the need... the need for speed.\",\n  \"May the Force be with you.\",\n  \"There's no place like home.\",\n  \"I'm the king of the world!\",\n  \"Why so serious?\",\n  \"Go ahead, make my day.\",\n  \"Life is like a box of chocolates; you never know what you're gonna get.\",\n  \"To infinity and beyond!\",\n  \"You can't handle the truth!\",\n  \"I'll be back.\",\n  \"I coulda been a contender.\",\n  \"Say 'hello' to my little friend!\",\n  \"You talking to me?\",\n  \"There's no crying in baseball!\",\n  \"Just keep swimming.\",\n  \"Here's Johnny!\",\n  \"You had me at 'hello.'\",\n  \"Houston, we have a problem.\",\n  \"I am Iron Man.\",\n  \"Keep your friends close, but your enemies closer.\",\n  \"It's not about the money. It's about sending a message.\",\n  \"I'm the Dude. So that's what you call me.\",\n  \"You either die a hero, or you live long enough to see yourself become the villain.\",\n  \"Here's looking at you, kid.\",\n  \"I'm king of the world!\",\n  \"I see dead people.\",\n  \"I could dance with you till the cows come home. On second thought, I'd rather dance with the cows until you come home.\",\n  \"I'm just one stomach flu away from my goal weight.\",\n];\n\nexport const randomNameGenerator = () => {\n  return randomNames[Math.floor(Math.random() * randomNames.length)];\n};\n\nexport const randomSentenceGenerator = () => {\n  return hollywoodDialogues[\n    Math.floor(Math.random() * hollywoodDialogues.length)\n  ];\n};\n","import React, { useEffect, useState } from \"react\";\nimport ChatMessage from \"./ChatMessage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addMessage } from \"../../utils/chatSlice\";\nimport {\n  randomNameGenerator,\n  randomSentenceGenerator,\n} from \"../../utils/helper\";\n\nconst LiveChat = () => {\n  const messages = useSelector((store) => store.chat.messages);\n  const dispatch = useDispatch();\n  const [typedChat, setTypedChat] = useState(\"\");\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      dispatch(\n        addMessage({\n          name: randomNameGenerator(),\n          message: randomSentenceGenerator(),\n        })\n      );\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <div className=\"w-full h-[545px] border bg-white flex flex-col justify-center rounded-2xl shadow-lg\">\n      <div className=\" h-[90%] overflow-y-auto flex flex-col-reverse\">\n        {messages &&\n          messages.map((message) => (\n            <ChatMessage name={message.name} message={message.message} />\n          ))}\n      </div>\n      <div className=\"border mx-10 h-[8%] rounded-full pl-3 flex items-center justify-between\">\n        <input\n          type=\"text\"\n          className=\"h-full w-4/5 outline-none\"\n          placeholder=\"Chat...\"\n          value={typedChat}\n          onChange={(e) => setTypedChat(e.target.value)}\n        />\n        <div\n          className=\"pr-8 cursor-pointer\"\n          onClick={() => {\n            dispatch(\n              addMessage({\n                name: \"You\",\n                message: typedChat,\n              })\n            );\n            setTypedChat(\"\");\n          }}\n        >\n          ‚úîÔ∏è\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LiveChat;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { closeMenu } from \"../../utils/globalAppSlice\";\n//import { YOUTUBE_SPECIFIC_VIDEO_API } from \"../utils/contants\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { YOUTUBE_SPECIFIC_VIDEO_API } from \"../../utils/contants\";\nimport WatchVideoDescription from \"./WatchVideoDescription\";\nimport CommentContainer from \"../comments/CommentContainer\";\nimport LiveChat from \"./LiveChat\";\n\nconst WatchPage = () => {\n  const [searchParams] = useSearchParams();\n  const [videoSpecificInfo, setvideoSpecificInfo] = useState([]);\n  const [liveChatToggle, setLiveChatToggle] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(closeMenu());\n    getVideoDetails();\n  }, []);\n\n  const getVideoDetails = async () => {\n    const data = await fetch(\n      YOUTUBE_SPECIFIC_VIDEO_API + searchParams.get(\"v\")\n    );\n    const json = await data.json();\n    setvideoSpecificInfo(json.items[0]);\n  };\n\n  return (\n    <div className=\"h-full w-full flex\">\n      <div className=\"w-[72%] flex flex-col pl-12\">\n        <iframe\n          width=\"98%\"\n          className=\"py-2 rounded-3xl\"\n          height=\"600\"\n          src={\"https://www.youtube.com/embed/\" + searchParams.get(\"v\")}\n          title=\"YouTube video player\"\n          frameBorder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share;\"\n          allowFullScreen\n        ></iframe>\n        <WatchVideoDescription info={videoSpecificInfo} />\n        <CommentContainer />\n      </div>\n      <div className=\"w-[28%]\">\n        <div\n          onClick={() => setLiveChatToggle(!liveChatToggle)}\n          className=\"bg-slate-100 px-3 h-10 border rounded-full grid place-content-center text-sm font-semibold mb-2 cursor-pointer\"\n        >\n          Open / Close Live Chat\n        </div>\n        {liveChatToggle ? <LiveChat /> : null}\n      </div>\n    </div>\n  );\n};\n\nexport default WatchPage;\n"],"names":["_ref","info","isExpanded","setIsExpanded","useState","length","_jsx","className","children","snippet","statistics","title","channelTitle","description","publishedAt","tags","thumbnails","viewCount","likeCount","_jsxs","src","medium","url","alt","concat","slice","onClick","Number","toLocaleString","map","element","substr","Comment","data","dispatch","useDispatch","replyComment","setReplyComment","name","comment","commentId","type","placeholder","value","onChange","e","target","addReplyComment","id","Math","random","toString","addComment","parentId","CommentList","_ref2","comments","replies","CommentContainer","commentList","useSelector","store","initialComment","setInitialComment","addInitialComment","message","randomNames","hollywoodDialogues","LiveChat","messages","chat","typedChat","setTypedChat","useEffect","interval","setInterval","addMessage","floor","clearInterval","ChatMessage","WatchPage","searchParams","useSearchParams","videoSpecificInfo","setvideoSpecificInfo","liveChatToggle","setLiveChatToggle","closeMenu","getVideoDetails","async","fetch","YOUTUBE_SPECIFIC_VIDEO_API","get","json","items","width","height","frameBorder","allow","allowFullScreen","WatchVideoDescription"],"sourceRoot":""}